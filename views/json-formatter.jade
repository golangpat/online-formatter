doctype html
html(lang='en')
	head
		meta(charset='utf-8')
		meta(http-equiv='X-UA-Compatible', content='IE=edge')
		meta(name='viewport', content='width=device-width, initial-scale=1')
		meta(name='description', content='An online tool to view, edit and format JSON data into a pretty human readable format with your desired indentation level.')

		meta(name='keywords', content='json viewer,json formatter,json beautifier,json parser,online json viewer,json viewer online,json analyser,json to xml Converter,json minifier,json tree viewer online, json web viewer,prettify json')
		meta(name="robots" content="index, follow" )
		meta(property="og:type" content="website" )
		meta(property="og:url" content="http://Online-formatter.com/json-formatter" )
		meta(property="og:title" content="JSON Formatter Online - JSON Viewer Online - Online-formatter.com" )
		meta(property="og:description" content="An online tool to view, edit and format JSON data into a pretty human readable format with your desired indentation level." )
		meta(property="og:site_name" content="Online-formatter.com" )
		link(rel="canonical", href="http://online-formatter.com/json-formatter")

		title JSON Formatter - JSON Viewer Online - Online-formatter.com
		// Bootstrap core CSS
		link(href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css", rel="stylesheet", integrity="sha256-7s5uDGW3AHqw6xtJmNNtr+OBRJUlgkNJEo78P4b0yRw= sha512-nNo+yCHEyn0smMxSswnf/OnX6/KwJuZTlNZBjauKhTK0c+zT+q5JOCx0UFhXQ6rJR9jg6Es8gPuD2uZcYDLqSw==", crossorigin="anonymous")
		link(href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css", rel="stylesheet", integrity="sha256-3dkvEK0WLHRJ7/Csr0BZjAWxERc5WH7bdeUya2aXxdU= sha512-+L4yy6FRcDGbXJ9mPG8MT/3UCDzwR9gPeyFNMCtInsol++5m3bk2bXWKdZjvybmohrAsn3Ua5x8gfLnbE1YkOg==", crossorigin="anonymous")
		// Custom styles for this template

		link(href='/stylesheets/codemirror.css', rel='stylesheet')
		link(href='/stylesheets/style.css', rel='stylesheet')

		// HTML5 shim and Respond.js IE8 support of HTML5 elements and media queries
		//if lt IE 9
		script(src='https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js')
		script(src='https://oss.maxcdn.com/respond/1.4.2/respond.min.js')
		//[endif]
	body
		nav(class="navbar navbar-default navbar-static-top", role="navigation", style="margin-bottom: 0")
			.navbar-header
				button(type="button", class="navbar-toggle collapsed", data-toggle="collapse", data-target=".navbar-collapse", aria-expanded="false", aria-controls="navbar")
					span(class="sr-only") Online-formatter.com
					span(class="icon-bar")
					span(class="icon-bar")
					span(class="icon-bar")
				a(class="navbar-brand brand", href="/") Online-formatter.com
			ul(class="nav navbar-top-links navbar-right hidden-xs")
				li
					a(href="/formatters")
						strong Formatters
				li
					a(href="/encoder-decoder")
						strong Encoders & Decoders
				li
					a(href="/generators")
						strong Generators
				li
					a(href="/hashes")
						strong Hashes

		.clearfix

		div(class="page-container")
			.page-sidebar-wrapper
				div(class="page-sidebar navbar-collapse collapse", role="navigation", aria-expanded="true")
					div(class="sidebar-nav")
						ul(class="nav", id="side-menu")
							li(class="nav-header")
								a(data-toggle="collapse" data-target="#formatter")
									span Formatters
								ul(class="nav nav-second-level collapse in", id="formatter")
									li.menu-active
										a(href="json-formatter") JSON Formatter
									li
										a(href="html-formatter") HTML Formatter
									li
										a(href="xml-formatter") XML Formatter
									li
										a(href="css-formatter") CSS Formatter

							li(class="nav-header")
								a(data-toggle="collapse" data-target="#encode-decode")
									span Encoders & Decoders
								ul(class="nav nav-second-level collapse in", id="encode-decode")
									li
										a(href="url-encode-decode") Url Encoder & Decoder
									li
										a(href="base64-encode-decode") Base 64 Encoder & Decoder

							li(class="nav-header")
								a(data-toggle="collapse" data-target="#generator")
									span Generators
								ul(class="nav nav-second-level collapse in", id="generator")
									li
										a(href="credit-card-generator") Credit Card Generator
									li
										a(href="qr-code-generator") QR Code Generator
									li
										a(href="random-password-generator") Random Password Generator

							li(class="nav-header")
								a(data-toggle="collapse" data-target="#hash")
									span Hashes
								ul(class="nav nav-second-level collapse in", id="hash")
									li
										a(href="md4-hash-generator") MD4
									li
										a(href="md5-hash-generator") MD5

									li
										a(href="ripemd-160-hash-generator") RIPEMD-160
									li
										a(href="sha1-hash-generator") SHA-1
									li
										a(href="sha-256-hash-generator") SHA-256
									li
										a(href="sha-384-hash-generator") SHA-384
									li
										a(href="sha-512-hash-generator") SHA-512

							//li(class="nav-header")
								a(data-toggle="collapse" data-target="#encrypt-decrypt")
									span Encrypt/Decrypt
								ul(class="nav nav-pills nav-stacked collapse in", id="encrypt-decrypt")
									li
										a(href="#")
											i Blowfish

							//li(class="nav-header")
								a(data-toggle="collapse" data-target="#validator")
									span Validators
								ul(class="nav nav-pills nav-stacked collapse in", id="validator")
									li
										a(href="#")
											i JSON Validator
									li
										a(href="#")
											i HTML Validator
									li
										a(href="#")
											i XML Validator - XSD
									li
										a(href="#")
											i XPath Tester
									li
										a(href="#")
											i Regular Expression Tester
						//content
			div(class="page-content-wrapper")
				.page-content
					.col-md-12
						h1(class="page-header") JSON Formatter - JSON Editor
						p An online tool to view, edit and format JSON data into a pretty human readable format with your desired indentation level.

						//ads
						//.ad-wrapper
						br
						//content
						div(class="col-sm-12", style="margin-bottom: 20px" )
							form(class="form-horizontal col-md-4 col-sm-6")
								.form-group
									.col-sm-12
										select(class="form-control input-sm", id="tab-size")
											option(value="1") Indent with a tab character
											option(value="2") Indent with 2 spaces
											option(value="3") Indent with 3 spaces
											option(value="4") Indent with 4 spaces
											option(value="8") Indent with 8 spaces
								.form-group
									.col-sm-12
										select(class="form-control input-sm", id="wrap-line-length")
											option(value="0") Do not wrap lines
											option(value="40") Wrap lines near 40 characters
											option(value="70") Wrap lines near 70 characters
											option(value="80") Wrap lines near 80 characters
											option(value="110") Wrap lines near 110 characters
											option(value="120") Wrap lines near 120 characters
											option(value="160") Wrap lines near 160 characters

							form(class="form-horizontal col-md-4 col-sm-6")
								.form-group
									.col-sm-12
										select(class="form-control input-sm", id="max-preserve-newlines")
											option(value="-1") Remove all extra newlines
											option(value="1") Allow 1 newline between tokens
											option(value="2") Allow 2 newlines between tokens
											option(value="5") Allow 5 newlines between tokens
											option(value="10") Allow 10 newlines between tokens
											option(value="0") Allow unlimited newlines between tokens
								.form-group
									.col-sm-12
										select(class="form-control input-sm", id="brace-style")
											option(value="collapse") Braces with control statement
											option(value="expand") Braces on own line
											option(value="end-expand") End braces on own line
											option(value="none") Attempt to keep braces where they are
							form(class="form-horizontal col-md-12", style="margin-top:5px")
								.form-group
									.col-sm-10
										button(class="btn btn-primary", id="json_formatter_btn") Format Code
						.col-sm-12
							form
								textarea(id="formatter_output", name="code", placeholder="Code goes here...")


						//.ad-wrapper

						.col-sm-12
							h2(style="font-size: medium; font-weight: bold") What is JSON?
							p JSON (JavaScript Object Notation) is a lightweight data-interchange format. It is easy for humans to read and write. It is easy for machines to parse and generate. It is based on a subset of the JavaScript Programming Language, Standard ECMA-262 3rd Edition - December 1999. JSON is a text format that is completely language independent but uses conventions that are familiar to programmers of the C-family of languages, including C, C++, C#, Java, JavaScript, Perl, Python, and many others. These properties make JSON an ideal data-interchange language.
							hr
							h2(style="font-size: medium; font-weight: bold") Data types and syntax
							p
								ul
									li <b>Number</b>: a signed decimal number that may contain a fractional part and may use exponential E notation. JSON does not allow non-numbers like NaN, nor does it make any distinction between integer and floating-point. (Even though JavaScript uses a double-precision floating-point format for all its numeric values, other languages implementing JSON may encode numbers differently)
									li <b>String</b>: a sequence of zero or more Unicode characters. Strings are delimited with double-quotation marks and support a backslash escaping syntax.
									li <b>Boolean</b>: either of the values <code>true</code> or <code>false</code>
									li <b>Array</b>: an ordered list of zero or more values, each of which may be of any type. Arrays use square bracket notation with elements being comma-separated.
									li <b>Object</b>: an unordered collection of name/value pairs where the names (also called keys) are strings. Since objects are intended to represent associative arrays, it is recommended, though not required, that each key is unique within an object. Objects are delimited with curly brackets and use commas to separate each pair, while within each pair the colon ':' character separates the key or name from its value.
									li <b>null</b>: An empty value, using the word <code>null</code>
							p <b>Whitespace</b> is allowed and ignored around or between syntactic elements (values and punctuation, but not within a string value). However, only four specific characters are considered whitespace for this purpose: space, horizontal tab, line feed, and carriage return. JSON does not provide or allow any sort of comment syntax.



		.page-footer
			footer(style="margin-top: 100px;")
				hr
				.row
					div(class="col-xs-12", style="text-align: center;")
						p(class="text-muted") © 2015 online-formatter.com</p>



		script(src='https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js')
		script(src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js", integrity="sha256-KXn5puMvxCw+dAYznun+drMdG1IFl3agK0p/pqT9KAo= sha512-2e8qq0ETcfWRI4HJBzQiA3UoyFk6tbNyG+qSaIBZLyW9Xf3sWZHN/lxe9fTh1U45DpPf07yj94KsUHHWe4Yk1A==", crossorigin="anonymous")
		script(src='javascripts/codemirror.js')
		script(src="javascripts/addon/selection/selection-pointer.js")
		script(src="javascripts/mode/javascript/javascript.js")
		script(src="javascripts/addon/display/placeholder.js")
		script(src="javascripts/addon/selection/active-line.js")

		script(src='javascripts/beautify.js')
		script(src='javascripts/main.min.js')
		script(src='javascripts/json-formatter-start.js')

		script.
			(function (i, s, o, g, r, a, m) {
				i['GoogleAnalyticsObject'] = r;
				i[r] = i[r] || function () {
							(i[r].q = i[r].q || []).push(arguments)
						}, i[r].l = 1 * new Date();
				a = s.createElement(o),
						m = s.getElementsByTagName(o)[0];
				a.async = 1;
				a.src = g;
				m.parentNode.insertBefore(a, m)
			})(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');

			ga('create', 'UA-71609266-1', 'auto');
			ga('send', 'pageview');